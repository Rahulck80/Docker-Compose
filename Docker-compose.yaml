version: '3.8'

services:
  db:
    image: postgres:15
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

  backend:
    image: tiangolo/uvicorn-gunicorn-fastapi:python3.9
    container_name: backend
    depends_on:
      - db
    environment:
      DB_HOST: db
      DB_NAME: ${POSTGRES_DB}
      DB_USER: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - ./backend:/app
    networks:
      - app-network

  frontend:
    image: node:18
    container_name: frontend
    depends_on:
      - backend
    working_dir: /usr/src/app
    volumes:
      - ./frontend:/usr/src/app
    command: sh -c "npm install && npm run build && npm install -g serve && serve -s build"
    ports:
      - 80:3000
    environment:
      API_URL: http://backend:8000
    networks:
      - app-network

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge
